@{ Layout = "~/Views/Shared/Layout_Default.cshtml"; }


@section CodeSource {
    <textarea class="code">
<script>
    $('#btnAdd').click(function () {
        var value = $('#txtNew').val();
        if (!value) return;
        var now = new Date();
        //Begin a write transaction, so blocking other write operation
        $todo.context.beginTransaction(true, function (tran) {
            $todo.context.TodoEntries.filter("it.Value == this.txt", { txt: value }).toArray({
                success: function (items, innerTran) {
                    if (items.length == 0) {
                        var entity = new $todo.Types.ToDoEntry({ Value: value, CreatedAt: now, ModifiedAt: now });
                        $todo.context.TodoEntries.add(entity);
                        $todo.context.saveChanges(tran)
                            .then(function (cnt, saveTran) { updateView(); })
                            .fail(function () { alert("Save error all!"); updateView(); });
                    } else {
                        alert("Item is in the DB");
                        updateView();
                    }
                },
                error: function () { console.log("General error"); }
            },
            tran);
        });
    });

    $('#btnClear').click(function () {
        $('#todoList > div').each(function () {
            var entity = $(this).data('entity');
            $todo.context.TodoEntries.remove(entity);
        });
        $todo.context.saveChanges(updateView);
    });

    $('#todoList').on('click', ':button', function (e) {
        var cmd = $(this).val();
        var entry = $(this).parent().data('entity');
        switch (cmd) {
            case 'undone':
            case 'done':
                $todo.context.TodoEntries.attach(entry);
                entry.Done = (cmd == 'done');
                break;
            case 'delete':
                $todo.context.TodoEntries.remove(entry);
                break;
        }
        $todo.context.saveChanges(updateView);
    });
</script>
    </textarea>
}

@section CodeRunning {
    <section id="wrapper" class="">
        <h2 class="margin10">Choose your prefered provider:</h2>
        <p id="providerSelection" class="download-info">
            <button id="btnSql" value="sqLite" class="btn btn-medium">WebSQL</button>
            <button id="btnIdb" value="indexedDb" class="btn btn-medium">IndexedDB</button>
        </p>

        <div>
            <input id="txtNew" type="text" class="reset-m" />
            <button id="btnAdd" class="btn btn-small">Add</button>
            <button id="btnClear" class="btn btn-small">Clear</button>
        </div>
        <div id="todoList"></div>
    </section>
    <script id="todoEntryTemplate" type="text/html">
        <div class="todoEntry row clear margin10">
            <div class="fleft iblock marginr10" style="min-width: 350px;">
                <label>${Value }</label>
            </div>
            {{if Done}}
            <button value="undone" class="btn btn-small btn-inverse tshadow">Undone</button>
            {{else}}
            <button value="done" class="btn btn-small btn-success tshadow">Done</button>
            {{/if}}
            <button value="delete" class="btn btn-small btn-danger tshadow">Delete</button>
        </div>
    </script>
}