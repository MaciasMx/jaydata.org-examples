@model JayDataExamples.App_Code.Example
@{ Layout = "~/Views/Shared/Layout_KendoUI.cshtml";
   ViewBag.Title = "Kendo Master-detail grid";
    }

@section Meta {
    <meta name="keywords" content="JayData, HTML5, Javascript, Kendo UI, oData, WebSQL, IndexedDB, example" />
    <meta name="description" content="How to use the JayData with Kendo UI? See this simple example." />
}

@section Includes {
    <script type="text/javascript" src="~/Scripts/vendor/north.js"></script>
    <script type="text/javascript" src="http://jaydata-cdn.s3.amazonaws.com/datajs-1.0.3-patched.js"></script>
    <link href="../Styles/dd.css" rel="stylesheet" />
}
@section SupportedBrowsers {
    @{Html.RenderPartial("_IncludeSupportedBrowsers");}
}
@section SimilarContents {
    @{Html.RenderPartial("_IncludeRelatedContents");}
}
@section SourceCode {
    @{Html.RenderPartial("_IncludeDownloadableSource");}
}

@section Tags {
    @{Html.RenderPartial("_IncludeTags");}
}

@section Description {
    <p class="main-desc">
        This Kendo Grid example uses OData to access the Northwind service. Sorting, paging and filtering works on the server side but with a simple
            switch they can be one the client side, too.  In this example the grid is read only and the columns are manually configured.
    </p>
}

@section CodeSource {
    <textarea id="code">
<div id="grid"></div>
<script type="text/x-kendo-template" id="template">
    <div class="container"></div>
</script>
<script>
    function detailInit(e) {
        e.detailRow.find(".container").kendoGrid({
            dataSource: remoteDB.Products
                .filter("it.Category_ID == catid", { catid: e.data.Category_ID })
                .asKendoDataSource({ pageSize: 25, batch: false }),
            filterable: true,
            sortable: true,
            pageable: true,
            columns: ["Product_Name", "Units_On_Order"]
        });
    }
    $('#grid').kendoGrid({
        dataSource: remoteDB.Categories
            .asKendoDataSource({ pageSize: 25, batch: false }),
        filterable: true,
        sortable: true,
        pageable: true,
        detailTemplate: kendo.template($("#template").html()),
        detailInit: detailInit,
        dataBound: function () {
            this.expandRow(this.tbody.find("tr.k-master-row").first());
        },
        height: 500,
        columns: ['Category_Name']
    });
</script>
    </textarea>

    <script>
        setTimeout(function () {
            CodeMirror.fromTextArea(document.getElementById('code'), {
                mode: 'text/html',
                lineNumbers: false
            });
        });
    </script>
}

@section CodeRunning {
    <div id="grid" />
    <script type="text/x-kendo-template" id="template">
    <div class="container">
    </div>
    </script>

    <script>
        $.when($.ready, getRemoteNorthwind())
        .then(function ($, remoteDB) {
            function detailInit(e) {
                e.detailRow.find(".container").kendoGrid({
                    dataSource: remoteDB.Products.filter("it.Category_ID == catid", { catid: e.data.Category_ID }).asKendoDataSource({ pageSize: 25, batch: false }),
                    filterable: true,
                    sortable: true,
                    pageable: false,
                    columns: ["Product_Name", "Units_On_Order"]
                });
            }

            $('#grid').kendoGrid({
                dataSource: remoteDB.Categories.asKendoDataSource({ pageSize: 25, batch: false }),
                filterable: true,
                sortable: true,
                pageable: false,
                detailTemplate: kendo.template($("#template").html()),
                detailInit: detailInit,
                dataBound: function () {
                    this.expandRow(this.tbody.find("tr.k-master-row").first());
                },
                height: 500,
                columns: ['Category_Name']
            });
        });
    </script>
}
